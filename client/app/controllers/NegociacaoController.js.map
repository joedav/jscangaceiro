{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","debounce","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","importaNegociacoes","obtemNegociacoesDoPeriodo","console","log","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {\r\n  Negociacoes,\r\n  NegociacaoService,\r\n  Negociacao\r\n} from '../domain/index.js';\r\n// removeu DataInvalidaException\r\nimport {\r\n  NegociacoesView,\r\n  MensagemView,\r\n  Mensagem,\r\n  DateConverter\r\n}\r\nfrom '../ui/index.js';\r\n// importou getExceptionMessage\r\nimport {\r\n  getNegociacaoDao,\r\n  Bind,\r\n  getExceptionMessage,\r\n  debounce\r\n} from '../util/index.js';\r\n\r\nexport class NegociacaoController {\r\n  constructor() {\r\n    // $ é o query selector (.bind(document)) siginifica que continuaremos utilizando o documento no contexto desta variavel\r\n    const $ = document.querySelector.bind(document);\r\n    // obtendo os elementos\r\n    this._inputData = $(\"#data\");\r\n    this._inputQuantidade = $(\"#quantidade\");\r\n    this._inputValor = $(\"#valor\"); // a criação dos input no construtor é para criar apenas uma vez\r\n\r\n    // negociacoes\r\n    this._negociacoes = new Bind(\r\n      new Negociacoes(),\r\n      new NegociacoesView('#negociacoes'),\r\n      // model=>this._negociacoesView.update(model);\r\n      'adiciona', 'esvazia'\r\n    );\r\n    // chamando negocieacoes view\r\n    // this._negociacoesView = new NegociacoesView(\"#negociacoes\");\r\n\r\n    // atualizando a view\r\n    // this._negociacoesView.update(this._negociacoes);\r\n\r\n    // instanciando a mensagem de modelo\r\n    this._mensagem = new Bind(\r\n      new Mensagem(),\r\n      new MensagemView('#mensagemView'),\r\n      'texto'\r\n      // model => this._mensagemView.update(model)\r\n    );\r\n\r\n    // instancia mensagem view\r\n    // this._mensagemView = new MensagemView(\"#mensagemView\");\r\n    // this._mensagemView.update(this._mensagem);\r\n    // instancia NegociacaoService\r\n    this._service = new NegociacaoService();\r\n\r\n    this._init();\r\n  }\r\n\r\n  async _init() {\r\n\r\n    // sintaxe nova \r\n    try {\r\n\r\n      // obtem a conexão\r\n      const dao = await getNegociacaoDao();\r\n      // obtem a lista de negociacoes salvas\r\n      const negociacoes = await dao.listaTodos();\r\n\r\n      negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n    } catch (err) {\r\n      this._mensagem.texto = getExceptionMessage(err);\r\n    }\r\n    /* sintaxe antiga bloqueante\r\n    // chamanod daofactory para que busque todas as negociacoes salvas\r\n    getNegociacaoDao()\r\n      .then(dao => dao.listaTodos())\r\n      .then(negociacoes => negociacoes.forEach(negociacao =>\r\n        this._negociacoes.adiciona(negociacao)))\r\n      .catch(err => this._mensagem.texto = err);*/\r\n  }\r\n\r\n  async adiciona(event) {\r\n\r\n    try {\r\n      // cancelamento da submissão do form\r\n      event.preventDefault();\r\n\r\n      // negociação que precisamos incluir no banco e na tabela\r\n      const negociacao = this._criaNegociacao();\r\n\r\n      const dao = await getNegociacaoDao();\r\n      await dao.adiciona(negociacao);\r\n\r\n      // incluindo a negociacao\r\n      this._negociacoes.adiciona(negociacao);\r\n\r\n      this._mensagem.texto = \"Negociacão adicionada com sucesso!\";\r\n\r\n      // chama o limpar formulario\r\n      this._limpaFormulario();\r\n    } catch (err) {\r\n      /*\r\n      console.log(err);\r\n      console.log(err.stack);\r\n\r\n      if (err instanceof DataInvalidaException) {\r\n      */\r\n      this._mensagem.texto = getExceptionMessage(err);\r\n      /*\r\n            } else {\r\n\r\n              this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte';\r\n            }*/\r\n    }\r\n  }\r\n\r\n  @debounce()\r\n  // importar negiociações\r\n  async importaNegociacoes() {\r\n\r\n    try {\r\n      const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\r\n\r\n      console.log(negociacoes);\r\n      negociacoes.filter(novaNegociacao =>\r\n\r\n          !this._negociacoes.paraArray().some(negociacaoExistente =>\r\n\r\n            novaNegociacao.equals(negociacaoExistente)))\r\n\r\n        .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n\r\n      this._mensagem.texto = 'Negociações do período importadas com sucesso';\r\n    } catch (err) {\r\n      this._mensagem.texto = getExceptionMessage(err);\r\n    }\r\n  }\r\n\r\n  /*\r\n  const negociacoes = [];\r\n  this._service.obterNegociacoesDaSemana().then(semana => {\r\n    negociacoes.push(...semana);\r\n    // quando retornamos uma promise, seu retorno é acessível ao encadear uma chamada á then\r\n    return this._service.obterNegociacoesDaSemanaAnterior();\r\n  }).then(anterior => {\r\n    negociacoes.push(...anterior);\r\n    negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n    return this._service.obterNegociacoesDaSemanaRetrasada();\r\n  }).then(retrasada => {\r\n    negociacoes.push(...retrasada);\r\n    negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n    this._mensagem.texto = \"Negociações importadas com sucesso!\";\r\n  }).catch(err => this._mensagem.texto = err);\r\n\r\n  /*this._service.obterNegociacoesDaSemana().then(negociacoes => {\r\n       negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n       this._mensagem.texto = 'Negociações importadas com sucesso!';\r\n     },\r\n     err => this._mensagem.texto = err\r\n   );\r\n   /*this._service.obterNegociacoesDaSemana((err, negociacoes) => {\r\n     if (err) {\r\n       this._mensagem.texto = \"Não foi possível obter as negociações da semana!\";\r\n       return;\r\n     }\r\n     negociacoes.forEach(negociacao => {\r\n       this._negociacoes.adiciona(negociacao);\r\n       this._mensagem.texto = \"Negociações importadas com sucesso!\";\r\n     })\r\n   });*/\r\n\r\n\r\n  // método para limpar o formulário\r\n  _limpaFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = \"\";\r\n    this._inputValor.value = \"\";\r\n    this._inputData.focus();\r\n  }\r\n\r\n  // metodo que cria a negociacao\r\n  _criaNegociacao() {\r\n    // iretornando uma instanci de negociacao\r\n    return new Negociacao(\r\n      DateConverter.paraData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value)\r\n    );\r\n  }\r\n\r\n  // metodo apaga para limpar os registros da table\r\n  async apaga() {\r\n    /* this._negociacoes.esvazia();\r\n    // this._negociacoesView.update(this._negociacoes);\r\n    this._mensagem.texto = \"Negociações apagadas com sucesso!\"; */\r\n    try {\r\n      const dao = await getNegociacaoDao();\r\n      await dao.apagaTodos();\r\n      this._negociacoes.esvazia();\r\n      this._mensagem.texto = \"Negociações removidas com sucesso!\";\r\n    } catch (err) {\r\n      this._mensagem.texto = getExceptionMessage(err);\r\n    }\r\n  }\r\n}"]}