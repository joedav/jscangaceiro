{"version":3,"sources":["../../../app-src/util/decorators/Constroller.js"],"names":["controller","seletores","elementos","map","seletor","document","querySelector","constructor","constutorOriginal","constructorNovo","instance","Object","getOwnPropertyNames","prototype","forEach","property","Reflect","hasMetadata","associaEvento","getMetadata","metadado","addEventListener","event","prevent","preventDefault","propertyKey"],"mappings":";;;AAAO,WAASA,UAAT,CAAoB,GAAGC,SAAvB,EAAkC;;AAEvC;AACA,UAAMC,YAAYD,UAAUE,GAAV,CAAcC,WAAWC,SAASC,aAAT,CAAuBF,OAAvB,CAAzB,CAAlB;;AAEA,WAAO,UAAUG,WAAV,EAAuB;AAC5B,YAAMC,oBAAoBD,WAA1B;;AAEA,YAAME,kBAAkB,YAAY;;AAElC;AACA,cAAMC,WAAW,IAAIF,iBAAJ,CAAsB,GAAGN,SAAzB,CAAjB;;AAEA;AACAS,eAAOC,mBAAP,CAA2BJ,kBAAkBK,SAA7C,EACGC,OADH,CACWC,YAAY;AACnB,cAAIC,QAAQC,WAAR,CAAoB,WAApB,EAAiCP,QAAjC,EAA2CK,QAA3C,CAAJ,EAA0D;AACxDG,0BAAcR,QAAd,EAAwBM,QAAQG,WAAR,CAAoB,WAApB,EAAiCT,QAAjC,EAA2CK,QAA3C,CAAxB;AACD;AACF,SALH;AAMD,OAZD;AAaA;AACAN,sBAAgBI,SAAhB,GAA4BL,kBAAkBK,SAA9C;;AAEA;AACA,aAAOJ,eAAP;AACD,KArBD;AAsBD;;wBA3BeT,U;;AA6BhB,WAASkB,aAAT,CAAuBR,QAAvB,EAAiCU,QAAjC,EAA2C;AACzCf,aAASC,aAAT,CAAuBc,SAAShB,OAAhC,EACGiB,gBADH,CACoBD,SAASE,KAD7B,EACoCA,SAAS;AACzC,UAAIF,SAASG,OAAb,EAAsBD,MAAME,cAAN;AACtBd,eAASU,SAASK,WAAlB,EAA+BH,KAA/B;AACD,KAJH;AAKD","file":"Constroller.js","sourcesContent":["export function controller(...seletores) {\r\n\r\n  // lista com elementos DOM\r\n  const elementos = seletores.map(seletor => document.querySelector(seletor));\r\n\r\n  return function (constructor) {\r\n    const constutorOriginal = constructor;\r\n\r\n    const constructorNovo = function () {\r\n\r\n      // guarda a uma referencia para a instÃ¢ncia\r\n      const instance = new constutorOriginal(...elementos);\r\n\r\n      // verifica cada propriedade da classe\r\n      Object.getOwnPropertyNames(constutorOriginal.prototype)\r\n        .forEach(property => {\r\n          if (Reflect.hasMetadata(\"bindEvent\", instance, property)) {\r\n            associaEvento(instance, Reflect.getMetadata(\"bindEvent\", instance, property));\r\n          }\r\n        });\r\n    }\r\n    // ajustanto prototype\r\n    constructorNovo.prototype = constutorOriginal.prototype;\r\n\r\n    // retornando o novo construtor;\r\n    return constructorNovo;\r\n  }\r\n}\r\n\r\nfunction associaEvento(instance, metadado) {\r\n  document.querySelector(metadado.seletor)\r\n    .addEventListener(metadado.event, event => {\r\n      if (metadado.prevent) event.preventDefault();\r\n      instance[metadado.propertyKey](event);\r\n    });\r\n}"]}